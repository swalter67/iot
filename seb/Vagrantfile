Vagrant.configure('2') do |config|
  config.vm.box = 'loundor/debian'

  #  Use rsync and NFS synced folders. (or disable them)
  #    https://www.vagrantup.com/docs/synced-folders/
  #config.vm.synced_folder('.', '/vagrant', type: 'rsync')
  config.vm.synced_folder('.', '/vagrant', type: 'nfs', disabled: true)

  #  Vagrant can set a static IP for the additional network interfaces.  Use
  #  public_network or private_network to manually set a static IP and
  #  netmask.  ESXi doesn't use the concept of public or private networks so
  #  both are valid here.   'bridge' will be ignored.  Netmask is optional if
  #  you are using standard Class A/B/C networks. The primary network
  #  interface is considered the management interface and cannot be changed,
  #  so you can specify 3 entries here!
  #    *** Invalid settings could cause 'vagrant up' to fail ***
  #config.vm.network 'private_network', ip: '192.168.10.170', netmask: '255.255.255.0'
  config.vm.network 'private_network', ip: '192.168.56.110'
  #config.vm.network 'private_network', ip: '192.168.1.171'
  #config.vm.network 'public_network', ip: '192.168.12.170'

  #
  #  Provider (esxi) settings
  #
  config.vm.provider :vmware_esxi do |esxi|
    esxi.esxi_hostname = 'vm.loundor.com'
    esxi.esxi_username = 'inception'
    esxi.esxi_password = 'prompt:'
    esxi.esxi_hostport = 1422

    #  HIGHLY RECOMMENDED!  Virtual Network
    #    You should specify a Virtual Network!  If it's not specified, the
    #    default is to use the first found.  You can specify up to 4 virtual
    #    networks using an array format.  Note that Vagrant only looks at the
    #    first interface for a valid IP address.  BTW: This does not configure
    #    IP addresses.  This specifies which 'ESXi virtual network' is used for
    #    each network interface in your VM.  For most OS's DHCP is the default,
    #    so, you will need a DHCP server for each virtual network.  To set a
    #    static IP for interface 2, 3 or 4. see above 'config.vm.network'.
    esxi.esxi_virtual_network = ['PC Network','Inception']

    #  OPTIONAL.  Specify a Disk Store
    #    If it's not specified, the Default is to use the least used Disk Store.
    #esxi.esxi_disk_store = 'DS_001'

    #  OPTIONAL.  Resource Pool
    #    If unspecified, the default is to create VMs in the 'root'.  You can
    #    specify a resource pool here to partition memory and cpu usage away
    #    from other systems on your esxi host.  The resource pool must
    #    already exist and have the proper permissions set.
    #
    #     This plugin will NOT create a Resource pool for you!
    #esxi.esxi_resource_pool = '/Vagrant'

    #  Optional. Specify a VM to clone instead of uploading a box.
    #    Vagrant can use any stopped VM as the source 'box'.   The VM must be
    #    registered, stopped and must have the vagrant insecure ssh key installed.
    #    If the VM is stored in a resource pool, it must be specified.  If this
    #    option is specified, config.vm.box should be set to a dummy box.
    #    See wiki: https://github.com/josenk/vagrant-vmware-esxi/wiki/How-to-clone_from_vm
    #esxi.clone_from_vm = 'resource_pool/source_vm'

    #  OPTIONAL.  Guest VM name to use.
    #    The Default will be automatically generated.  It will be based on
    #    the guest_name_prefix (see below), your hostname & username and path.
    #    Otherwise you can set a fixed guest VM name here.
    esxi.guest_name = 'Machine1'

    #  OPTIONAL.  When automatically naming VMs, use this prefix.
    #esxi.guest_name_prefix = 'V-'

    #  OPTIONAL.  Set the guest username login.  The default is 'vagrant'.
    #esxi.guest_username = 'vagrant'

    #  OPTIONAL.  Memory size override
    #    The default is to use the memory size specified in the
    #    vmx file, however you can specify a new value here.
    esxi.guest_memsize = '2048'

    #  OPTIONAL.  Virtual CPUs override
    #    The default is to use the number of virtual cpus specified
    #     in the vmx file, however you can specify a new value here.
    esxi.guest_numvcpus = '1'

    #  OPTIONAL. Specify a disk type.
    #    If unspecified, it will be set to 'thin'.  Otherwise, you can set to
    #    'thin', 'thick', or 'eagerzeroedthick'
    #esxi.guest_disk_type = 'thick'

    #  OPTIONAL. Boot disk size.
    #    If unspecified, the boot disk size will be the same as the original
    #    box.  You can specify a larger boot disk size in GB.  The extra disk space
    #    will NOT automatically be available to your OS.  You will need to
    #    create or modify partitions, LVM and/or filesystems.  NOTE:  This will
    #    extend only, no shrinking.
    esxi.guest_boot_disk_size = '20'

    #  OPTIONAL.  Create additional storage for guests.
    #    You can specify an array of upto 14 virtual disk sizes (in GB) that you
    #    would like the provider to create once the guest has been created.  You
    #    can optionally specify the size and datastore using a hash.  The
    #    virtual disks will be created and added to the guest, however you must
    #    provision it.  The disks can be used for lvm, partitioned, raw disk
    #    for data bases, etc...
    #esxi.guest_storage = [ 10, 20, { size: 30, datastore: 'datastore1' } ]

    #  OPTIONAL & RISKY.  Specify up to 4 MAC addresses
    #    The default is ovftool to automatically generate a MAC address.
    #    You can specify an array of MAC addresses using upper or lower case,
    #    separated by colons ':'.  I highly recommend using vmware's OUI
    #    of '00:50:56' or '00:0c:29'.  I consider this option a risk
    #    because you may reuse a Vagrantfile without realizing you are
    #    duplicating the MAC address.
    #    *** Invalid settings could cause 'vagrant up' to fail ***
    #esxi.guest_mac_address = ['00:50:56:aa:bb:cc', '00:50:56:01:01:01','00:50:56:02:02:02','00:50:56:BE:AF:01' ]

    esxi.guest_nic_type = 'vmxnet3'

    #  RISKY. guest_guestos
    #    if unspecified, the default will be generated by the OVFTool.  Most
    #    of the time, you don't need to change this unless ovftool doesn't get
    #    the correct information from the box.  See my page on supported guest_guestos
    #    types for ESXI.
    #    https://github.com/josenk/vagrant-vmware-esxi/blob/master/ESXi_guestos_types.md
    esxi.guest_guestos = 'other3xlinux-64'

    #  OPTIONAL. guest_virtualhw_version
    #    If unspecified, the default will be generated by the OVFTool.  Most
    #    of the time, you don't need to change this unless you are using advanced
    #    custom vmx settings that require it.
    #    ESXi 6.5 supports these versions. 4,7,8,9,10,11,12,13 & 14.
    #esxi.guest_virtualhw_version = '9'

    #esxi.guest_autostart = 'false'

    #  RISKY. guest_custom_vmx_settings
    #    You can specify an array of custom vmx settings to add (or to override
    #    existing settings).   ****  I don't do any validation, so if you
    #    make any errors, it will not be caught ***   This is the place you would
    #    add any special settings you need in your vmx.  (Like adding a USB, DVD
    #    CPU settings, etc...).
    #    ex vhv.enable = 'TRUE' will be appended, floppy0.presend = 'TRUE' will be modified
    #esxi.guest_custom_vmx_settings = [['vhv.enable','TRUE'], ['floppy0.present','TRUE']]

    #  OPTIONAL. local_lax
    #    If unspecified, the ovftool option --lax is disabled.   If you are
    #    importing ovf boxes that generate errors, you may want to enable local_lax
    #    to convert the errors to warning. (then the import could succeed)
    #esxi.local_lax = 'true'

    #  OPTIONAL.  Guest IP Caching
    #    If unspecified, guest IP caching will be enabled.  This will result in
    #    faster vagrant command executution.   However, vagrant could get incorrect
    #    information if an IP changes on the guest.   Set this 'False' to disable
    #    IP caching.
    #esxi.local_use_ip_cache = 'False'

    #  DANGEROUS!  Allow Overwrite
    #    If unspecified, the default is to produce an error if overwriting
    #    vm's and packages.
    #    Set this to 'True' will overwrite existing VMs (with the same name)
    #    when you run vagrant up.   ie,  if the guest_name already exists,
    #    it will be destroyed, then over written...  This is helpful
    #    if you have a VM that became an orphan (vagrant lost association).
    #    This will also overwrite your box when using vagrant package.
    #esxi.local_allow_overwrite = 'True'

    #  Advanced users.
    #    If unspecified or set to 'False', all WARNINGS will produce a WARNING and vagrant
    #    will continue.   If set to 'True', all WARNINGS will produce a FAILURE and
    #    vagrant will stop.
    #esxi.local_failonwarning = 'True'

    #  Plugin debug output.
    #    Send bug reports with this debug output...
    esxi.debug = 'true'

end
config.vm.provision "shell", inline: <<-SHELL
export DEBIAN_FRONTEND=noninteractive
#export LANGUAGE=en_US.UTF-8
#export LANG=en_US.UTF-8
#export LC_ALL=en_US.UTF-8
#locale-gen en_US.UTF-8
#dpkg-reconfigure locales
sudo apt-get update
sudo apt-get upgrade -y
sed -i 's/ChallengeResponseAuthentication no/ChallengeResponseAuthentication yes/g' /etc/ssh/sshd_config
sudo systemctl restart sshd

# default: dpkg-preconfigure: impossible de réouvrir stdin : No such file or directory

# Ajouter net.ifnames=0 dans le paramètre du noyau pour avoir les eth classiques au lieu de enpXsX.
# Ou bien avec awk recuper le field nb 7 de la ligne qui contient l adresse ip concernene par eth1.
curl -sfL https://get.k3s.io | K3S_KUBECONFIG_MODE="644" INSTALL_K3S_EXEC="--flannel-iface eth1" sh -s -
echo $(sudo cat /var/lib/rancher/k3s/server/node-token) > /vagrant/.token
SHELL
end
